import { PrismaService } from '../prisma/prisma.service';
import { CreatePlannerDto } from './dto/create-planner.dto';
import { UpdatePlannerDto } from './dto/update-planner.dto';
import { AddItemToPlannerDto } from './dto/add-item-to-planner.dto';
export declare class PlannersService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    createPlanner(userId: string, createPlannerDto: CreatePlannerDto): Promise<{
        items: ({
            service: {
                id: number;
                name: string;
                createdAt: Date;
                supplierId: number;
                priceAxo: number | null;
                description: string | null;
                price: number;
                location: string | null;
                availableFrom: Date | null;
                availableTo: Date | null;
                packs: import("@prisma/client/runtime/library").JsonValue | null;
                images: import("@prisma/client/runtime/library").JsonValue | null;
                ytLink: string | null;
                sizeTour: number | null;
                serviceType: string | null;
                serviceCategory: string | null;
                stateFrom: string | null;
                cityFrom: string | null;
                stateTo: string | null;
                cityTo: string | null;
                includes: import("@prisma/client/runtime/library").JsonValue | null;
                excludes: import("@prisma/client/runtime/library").JsonValue | null;
                faqs: import("@prisma/client/runtime/library").JsonValue | null;
                itinerary: import("@prisma/client/runtime/library").JsonValue | null;
                hotelProviderID: number | null;
                transportProviderID: number | null;
                dates: import("@prisma/client/runtime/library").JsonValue | null;
                addOns: import("@prisma/client/runtime/library").JsonValue | null;
                currentBookings: number | null;
                maxCapacity: number | null;
                seasonalPrices: import("@prisma/client/runtime/library").JsonValue | null;
            } | null;
            product: {
                id: number;
                name: string;
                createdAt: Date;
                updatedAt: Date;
                image: string;
                priceAxo: number | null;
                description: string | null;
                price: number;
                images: import("@prisma/client/runtime/library").JsonValue | null;
                stock: number;
                category: string | null;
                specifications: import("@prisma/client/runtime/library").JsonValue | null;
                tags: import("@prisma/client/runtime/library").JsonValue | null;
            } | null;
        } & {
            id: string;
            createdAt: Date;
            plannerId: string;
            serviceId: number | null;
            productId: number | null;
            quantity: number;
            priceMXN: number;
            priceAxo: number | null;
            selectedDate: Date | null;
            notes: string | null;
        })[];
        user: {
            id: string;
            name: string | null;
            email: string;
        };
    } & {
        id: string;
        userId: string;
        name: string;
        destination: string | null;
        startDate: Date | null;
        endDate: Date | null;
        status: import(".prisma/client").$Enums.PlannerStatus;
        totalMXN: number;
        totalAxo: number;
        isPublic: boolean;
        shareCode: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    getPlannersByUser(userId: string): Promise<({
        items: ({
            service: {
                id: number;
                name: string;
                createdAt: Date;
                supplierId: number;
                priceAxo: number | null;
                description: string | null;
                price: number;
                location: string | null;
                availableFrom: Date | null;
                availableTo: Date | null;
                packs: import("@prisma/client/runtime/library").JsonValue | null;
                images: import("@prisma/client/runtime/library").JsonValue | null;
                ytLink: string | null;
                sizeTour: number | null;
                serviceType: string | null;
                serviceCategory: string | null;
                stateFrom: string | null;
                cityFrom: string | null;
                stateTo: string | null;
                cityTo: string | null;
                includes: import("@prisma/client/runtime/library").JsonValue | null;
                excludes: import("@prisma/client/runtime/library").JsonValue | null;
                faqs: import("@prisma/client/runtime/library").JsonValue | null;
                itinerary: import("@prisma/client/runtime/library").JsonValue | null;
                hotelProviderID: number | null;
                transportProviderID: number | null;
                dates: import("@prisma/client/runtime/library").JsonValue | null;
                addOns: import("@prisma/client/runtime/library").JsonValue | null;
                currentBookings: number | null;
                maxCapacity: number | null;
                seasonalPrices: import("@prisma/client/runtime/library").JsonValue | null;
            } | null;
            product: {
                id: number;
                name: string;
                createdAt: Date;
                updatedAt: Date;
                image: string;
                priceAxo: number | null;
                description: string | null;
                price: number;
                images: import("@prisma/client/runtime/library").JsonValue | null;
                stock: number;
                category: string | null;
                specifications: import("@prisma/client/runtime/library").JsonValue | null;
                tags: import("@prisma/client/runtime/library").JsonValue | null;
            } | null;
        } & {
            id: string;
            createdAt: Date;
            plannerId: string;
            serviceId: number | null;
            productId: number | null;
            quantity: number;
            priceMXN: number;
            priceAxo: number | null;
            selectedDate: Date | null;
            notes: string | null;
        })[];
        _count: {
            items: number;
        };
    } & {
        id: string;
        userId: string;
        name: string;
        destination: string | null;
        startDate: Date | null;
        endDate: Date | null;
        status: import(".prisma/client").$Enums.PlannerStatus;
        totalMXN: number;
        totalAxo: number;
        isPublic: boolean;
        shareCode: string | null;
        createdAt: Date;
        updatedAt: Date;
    })[]>;
    getPlannerById(id: string, userId: string): Promise<{
        items: ({
            service: {
                id: number;
                name: string;
                createdAt: Date;
                supplierId: number;
                priceAxo: number | null;
                description: string | null;
                price: number;
                location: string | null;
                availableFrom: Date | null;
                availableTo: Date | null;
                packs: import("@prisma/client/runtime/library").JsonValue | null;
                images: import("@prisma/client/runtime/library").JsonValue | null;
                ytLink: string | null;
                sizeTour: number | null;
                serviceType: string | null;
                serviceCategory: string | null;
                stateFrom: string | null;
                cityFrom: string | null;
                stateTo: string | null;
                cityTo: string | null;
                includes: import("@prisma/client/runtime/library").JsonValue | null;
                excludes: import("@prisma/client/runtime/library").JsonValue | null;
                faqs: import("@prisma/client/runtime/library").JsonValue | null;
                itinerary: import("@prisma/client/runtime/library").JsonValue | null;
                hotelProviderID: number | null;
                transportProviderID: number | null;
                dates: import("@prisma/client/runtime/library").JsonValue | null;
                addOns: import("@prisma/client/runtime/library").JsonValue | null;
                currentBookings: number | null;
                maxCapacity: number | null;
                seasonalPrices: import("@prisma/client/runtime/library").JsonValue | null;
            } | null;
            product: {
                id: number;
                name: string;
                createdAt: Date;
                updatedAt: Date;
                image: string;
                priceAxo: number | null;
                description: string | null;
                price: number;
                images: import("@prisma/client/runtime/library").JsonValue | null;
                stock: number;
                category: string | null;
                specifications: import("@prisma/client/runtime/library").JsonValue | null;
                tags: import("@prisma/client/runtime/library").JsonValue | null;
            } | null;
        } & {
            id: string;
            createdAt: Date;
            plannerId: string;
            serviceId: number | null;
            productId: number | null;
            quantity: number;
            priceMXN: number;
            priceAxo: number | null;
            selectedDate: Date | null;
            notes: string | null;
        })[];
        user: {
            id: string;
            name: string | null;
            email: string;
        };
    } & {
        id: string;
        userId: string;
        name: string;
        destination: string | null;
        startDate: Date | null;
        endDate: Date | null;
        status: import(".prisma/client").$Enums.PlannerStatus;
        totalMXN: number;
        totalAxo: number;
        isPublic: boolean;
        shareCode: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    updatePlanner(id: string, userId: string, updatePlannerDto: UpdatePlannerDto): Promise<{
        items: ({
            service: {
                id: number;
                name: string;
                createdAt: Date;
                supplierId: number;
                priceAxo: number | null;
                description: string | null;
                price: number;
                location: string | null;
                availableFrom: Date | null;
                availableTo: Date | null;
                packs: import("@prisma/client/runtime/library").JsonValue | null;
                images: import("@prisma/client/runtime/library").JsonValue | null;
                ytLink: string | null;
                sizeTour: number | null;
                serviceType: string | null;
                serviceCategory: string | null;
                stateFrom: string | null;
                cityFrom: string | null;
                stateTo: string | null;
                cityTo: string | null;
                includes: import("@prisma/client/runtime/library").JsonValue | null;
                excludes: import("@prisma/client/runtime/library").JsonValue | null;
                faqs: import("@prisma/client/runtime/library").JsonValue | null;
                itinerary: import("@prisma/client/runtime/library").JsonValue | null;
                hotelProviderID: number | null;
                transportProviderID: number | null;
                dates: import("@prisma/client/runtime/library").JsonValue | null;
                addOns: import("@prisma/client/runtime/library").JsonValue | null;
                currentBookings: number | null;
                maxCapacity: number | null;
                seasonalPrices: import("@prisma/client/runtime/library").JsonValue | null;
            } | null;
            product: {
                id: number;
                name: string;
                createdAt: Date;
                updatedAt: Date;
                image: string;
                priceAxo: number | null;
                description: string | null;
                price: number;
                images: import("@prisma/client/runtime/library").JsonValue | null;
                stock: number;
                category: string | null;
                specifications: import("@prisma/client/runtime/library").JsonValue | null;
                tags: import("@prisma/client/runtime/library").JsonValue | null;
            } | null;
        } & {
            id: string;
            createdAt: Date;
            plannerId: string;
            serviceId: number | null;
            productId: number | null;
            quantity: number;
            priceMXN: number;
            priceAxo: number | null;
            selectedDate: Date | null;
            notes: string | null;
        })[];
    } & {
        id: string;
        userId: string;
        name: string;
        destination: string | null;
        startDate: Date | null;
        endDate: Date | null;
        status: import(".prisma/client").$Enums.PlannerStatus;
        totalMXN: number;
        totalAxo: number;
        isPublic: boolean;
        shareCode: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    deletePlanner(id: string, userId: string): Promise<{
        message: string;
    }>;
    addItemToPlanner(addItemDto: AddItemToPlannerDto, userId: string): Promise<{
        service: {
            id: number;
            name: string;
            createdAt: Date;
            supplierId: number;
            priceAxo: number | null;
            description: string | null;
            price: number;
            location: string | null;
            availableFrom: Date | null;
            availableTo: Date | null;
            packs: import("@prisma/client/runtime/library").JsonValue | null;
            images: import("@prisma/client/runtime/library").JsonValue | null;
            ytLink: string | null;
            sizeTour: number | null;
            serviceType: string | null;
            serviceCategory: string | null;
            stateFrom: string | null;
            cityFrom: string | null;
            stateTo: string | null;
            cityTo: string | null;
            includes: import("@prisma/client/runtime/library").JsonValue | null;
            excludes: import("@prisma/client/runtime/library").JsonValue | null;
            faqs: import("@prisma/client/runtime/library").JsonValue | null;
            itinerary: import("@prisma/client/runtime/library").JsonValue | null;
            hotelProviderID: number | null;
            transportProviderID: number | null;
            dates: import("@prisma/client/runtime/library").JsonValue | null;
            addOns: import("@prisma/client/runtime/library").JsonValue | null;
            currentBookings: number | null;
            maxCapacity: number | null;
            seasonalPrices: import("@prisma/client/runtime/library").JsonValue | null;
        } | null;
        product: {
            id: number;
            name: string;
            createdAt: Date;
            updatedAt: Date;
            image: string;
            priceAxo: number | null;
            description: string | null;
            price: number;
            images: import("@prisma/client/runtime/library").JsonValue | null;
            stock: number;
            category: string | null;
            specifications: import("@prisma/client/runtime/library").JsonValue | null;
            tags: import("@prisma/client/runtime/library").JsonValue | null;
        } | null;
        planner: {
            id: string;
            userId: string;
            name: string;
            destination: string | null;
            startDate: Date | null;
            endDate: Date | null;
            status: import(".prisma/client").$Enums.PlannerStatus;
            totalMXN: number;
            totalAxo: number;
            isPublic: boolean;
            shareCode: string | null;
            createdAt: Date;
            updatedAt: Date;
        };
    } & {
        id: string;
        createdAt: Date;
        plannerId: string;
        serviceId: number | null;
        productId: number | null;
        quantity: number;
        priceMXN: number;
        priceAxo: number | null;
        selectedDate: Date | null;
        notes: string | null;
    }>;
    removeItemFromPlanner(itemId: string, userId: string): Promise<{
        message: string;
    }>;
    private updatePlannerTotals;
    getPlannerStats(id: string, userId: string): Promise<{
        totalItems: number;
        totalMXN: number;
        totalAxo: number;
        daysPlanned: number;
        itemsByDate: {
            date: string;
            items: any[];
            totalCost: number;
        }[];
    }>;
}
